<com.oplus.bracket.IOplusBracketModeChangedListener: void onBracketModeChanged(int)>
<com.oplus.bracket.IOplusBracketModeChangedListener: void onBindService(com.oplus.bracket.IOplusBracketWindowObserver)>
<com.oplus.bracket.IOplusBracketModeChangedListener: void onUnBindService(int)>
<com.oplus.bracket.IOplusBracketModeChangedListener: void onBracketRegionChange(android.graphics.Rect)>
<com.oplus.verifycode.IOplusVerifyCodeService: void setVerifyCode(java.lang.String)>


<android.os.storage.IOplusStorageManagerService: int clearSDLockPassword()>
<android.os.storage.IOplusStorageManagerService: byte[] decryptDek(byte[],int,byte[],byte[],byte[],byte[])>
<android.os.storage.IOplusStorageManagerService: java.util.Map initAeKek()>
<android.os.storage.IOplusStorageManagerService: java.util.Map initBeKek()>
<android.os.storage.IOplusStorageManagerService: void addAuthResultInfo(int,int,int,java.lang.String)>
<android.os.storage.IOplusStorageManagerService: int configDfsFuse(java.lang.String,int,int)>
<android.os.storage.IOplusStorageManagerService: android.os.ParcelFileDescriptor mountDfsFuse(java.lang.String,java.lang.String)>
<android.os.storage.IOplusStorageManagerService: int setSDLockPassword(java.lang.String)>
<android.os.storage.IOplusStorageManagerService: java.util.Map encryptDek(byte[],int,byte[],byte[],byte[])>
<android.os.storage.IOplusStorageManagerService: void eraseSDLock()>
<android.os.storage.IOplusStorageManagerService: int unlockSDCard(java.lang.String)>
<android.os.storage.IOplusStorageManagerService: int getSDLockState()>
<android.os.storage.IOplusStorageManagerService: int getStorageData()>
<android.os.storage.IOplusStorageManagerService: void voldTBExt()>
<android.os.storage.IOplusStorageManagerService: java.lang.String getSDCardId()>
<android.os.storage.IOplusStorageManagerService: long getUnlockSdcardDeadline()>
<android.os.storage.IOplusStorageManagerService: int umountDfsFuse(java.lang.String)>





<com.oplus.darkmode.IOplusDarkModeListener: void onUiModeConfigurationChangeFinish()>
<com.oplus.exsystemservice.postman.IOplusStampService: int sendOnStampEvent(java.lang.String,java.util.Map,long)>
<com.oplus.exsystemservice.postman.IOplusStampService: void sendDeleteStampId(java.lang.String)>

<android.app.IActivityClientController: void updateActivitySpecificConfig(android.os.IBinder,android.content.res.Configuration)>



<com.oplus.app.ITerminateObserver: void onRequestTerminate(int,java.lang.String)>
<com.oplus.app.ITerminateObserver: void onTerminateStateChanged(int,int,boolean)>
<com.oplus.app.IActivityMultiWindowAllowanceObserver: void onMultiWindowAllowanceChanged(com.oplus.app.ActivityMultiWindowAllowance)>



<com.oplus.multisearch.IOplusMultiSearchManagerSession: void registerListener(com.oplus.multisearch.IOplusMultiSearchListener)>
<com.oplus.multisearch.IOplusMultiSearchManagerSession: void unregisterListener(com.oplus.multisearch.IOplusMultiSearchListener)>

<com.oplus.splitscreen.IOplusSplitScreenSession: void startReplaceSplitWhenNormal(int,android.content.Intent,int,int)>


<com.oplus.splitscreen.IOplusSplitScreenSession: java.util.Map calculateThreeLayoutRects(int,android.content.Intent,int)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void startZoomWindowFromSplit(int,android.graphics.Rect,float)>
<com.oplus.splitscreen.IOplusSplitScreenSession: java.util.Map calculateReplaceLayoutRects(int,android.content.Intent,int,boolean)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void setSplitRequestedOrientation(int)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void notifyFoldUpdatingComplete()>
<com.oplus.splitscreen.IOplusSplitScreenSession: void removeSelfSplitTaskIfNeed(int,int)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void registerStackDivider(com.oplus.splitscreen.IOplusStackDividerConnection)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void hideTargetSplashScreen(int)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void setOverrideRemoteAnimations(android.view.RemoteAnimationDefinition)>
<com.oplus.splitscreen.IOplusSplitScreenSession: java.util.Map getCurrentEmbeddedRects(int)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void unregisterActivityMultiWindowAllowanceObserver(android.os.IBinder,android.os.IBinder)>
<com.oplus.splitscreen.IOplusSplitScreenSession: android.view.SurfaceControl getWallpaperDisplayAreaSurface()>
<com.oplus.splitscreen.IOplusSplitScreenSession: boolean requestSwitchToSplitScreen(android.os.IBinder,com.oplus.app.SplitScreenParams)>

<com.oplus.splitscreen.IOplusSplitScreenSession: void startThreeSplitFromNormal(int,android.content.Intent,int)>

<com.oplus.splitscreen.IOplusSplitScreenSession: boolean requestSwitchToFullScreen(android.os.IBinder)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void setSplitRootTaskAlwaysOnTop(boolean)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void setWallpaperVisible(boolean)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void setSplitControlBarRegion(android.graphics.Rect,boolean)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void notifySplitRootTaskId(int,int,int)>
<com.oplus.splitscreen.IOplusSplitScreenSession: int getLastLayerForTask(int)>
<com.oplus.splitscreen.IOplusSplitScreenSession: java.util.List getRecentUsedApp(int,long,boolean,java.util.List)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void maintainSplitToZoomTaskState(int,boolean)>
<com.oplus.splitscreen.IOplusSplitScreenSession: android.graphics.Rect getCurrentRectForTask(int,int)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void setSplitTasksState(int,int,boolean)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void registerActivityMultiWindowAllowanceObserver(android.os.IBinder,android.os.IBinder)>
<com.oplus.splitscreen.IOplusSplitScreenSession: boolean moveChildrenTaskToBack(int)>
<com.oplus.splitscreen.IOplusSplitScreenSession: boolean isTopActivityFinishDraw(int)>
<com.oplus.splitscreen.IOplusSplitScreenSession: void updateEnterNormalType(int)>
<com.oplus.splitscreen.IOplusSplitScreenSession: java.util.List getRecentUsedAppWithMultiApp(int,long,boolean,java.util.List)>



<android.content.IOplusClipboardManager: android.content.ClipData getUserPrimaryClip(java.lang.String,int)>
<android.content.IOplusClipboardManager: java.util.Map getUserPathInfo()>

<android.app.IApplicationThread: void oplusScheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int,int,int)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readOplusReserve3(int,int)>
<vendor.oplus.hardware.performance.IPerformance: int disableDamonReclaim()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readTmemoryIoLatency()>
<vendor.oplus.hardware.performance.IPerformance: void setSchedAssistImptTask(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: void setSchedAssistScene(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getionwait()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getF2fsMovedBlks()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readJankCpuInfo()>
<vendor.oplus.hardware.performance.IPerformance: int writeMemMonitor(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int searchAcmNomediaDirName(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: void writeTidsSet(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getallocwait()>
<vendor.oplus.hardware.performance.IPerformance: int writeTmemoryHighWaterRatio(int)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getKmallocDebug()>
<vendor.oplus.hardware.performance.IPerformance: int perProcessMemReclaim(int,int,int)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readStorageFeature(java.lang.String,java.lang.String,java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readUxTaskTrack(int,int)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getClmThreshold(int)>
<vendor.oplus.hardware.performance.IPerformance: int getUfsplusHpbStatus()>
<vendor.oplus.hardware.performance.IPerformance: int writeMemleakDetectThread(int)>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcReqHal getHIScmCall()>
<vendor.oplus.hardware.performance.IPerformance: int getUfsplusTwStatus()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getDdrResidency()>
<vendor.oplus.hardware.performance.IPerformance: int writeTmemoryFlushBusy(int)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readCpuTaskstats()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getdstate()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readJankTaskTrack()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readMemleakDetectThread()>
<vendor.oplus.hardware.performance.IPerformance: int addTaskTrackPid(int,int,boolean)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readNormalizeRunningTime()>
<vendor.oplus.hardware.performance.IPerformance: int writeVaFeature(int)>
<vendor.oplus.hardware.performance.IPerformance: void setClmThreshold(java.lang.String,int)>
<vendor.oplus.hardware.performance.IPerformance: int addAcmDirName(java.lang.String,long)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readFgFreqsThreshold()>
<vendor.oplus.hardware.performance.IPerformance: void writeDBacktrace(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int disableMultiThreadOptimize()>
<vendor.oplus.hardware.performance.IPerformance: int setDamonReclaimWmarks(int,int,int,int)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readTaskCpustatsEnable()>
<vendor.oplus.hardware.performance.IPerformance: void removeTaskTrackPid(int,int)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readNandswapProc(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getiowait()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getExt4FreefragInfo(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String hybridswap_memcg_para_read(int,java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readTmemoryErrorStat()>
<vendor.oplus.hardware.performance.IPerformance: void setFrameRate(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getClmMuxSwitch()>
<vendor.oplus.hardware.performance.IPerformance: int enableProcessReclaim()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readIOBacktrace()>
<vendor.oplus.hardware.performance.IPerformance: void writeTaskSchedInfo(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readJankCpuLoad32Scale()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getHICpuInfo()>
<vendor.oplus.hardware.performance.IPerformance: int getKernelVersion()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String hybridswap_zram_para_read(int)>
<vendor.oplus.hardware.performance.IPerformance: void writeIOBacktrace(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readClmHighLoadGrp()>
<vendor.oplus.hardware.performance.IPerformance: int existMemMonitor()>
<vendor.oplus.hardware.performance.IPerformance: int enableTaskCpustats()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getVmallocHashCal()>
<vendor.oplus.hardware.performance.IPerformance: int enableAudioPerf(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: void setSlideboost(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int addAcmPkgName(java.lang.String,long)>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcReqHal getHISchedLatency()>
<vendor.oplus.hardware.performance.IPerformance: long getAcmDirFlag(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int getInterfaceVersion()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readTmemoryDirtypages()>
<vendor.oplus.hardware.performance.IPerformance: int setTpdID(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readKmallocDebugCreate()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readPidsSet()>
<vendor.oplus.hardware.performance.IPerformance: void writePidsSet(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readJankCpuIndicator()>
<vendor.oplus.hardware.performance.IPerformance: int writeOplusReserve3(int,int,java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: void writeClmEnable(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.OsvelteVersionRet readOsvelteVersion()>
<vendor.oplus.hardware.performance.IPerformance: int writeKmallocDebugCreate(int)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readDConvert()>
<vendor.oplus.hardware.performance.IPerformance: int perProcessMemReadahead(int,int,int)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readClmLowLoadGrp()>
<vendor.oplus.hardware.performance.IPerformance: void writeJankTaskTrackEnable(boolean)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getDevinfoDDRInfo()>
<vendor.oplus.hardware.performance.IPerformance: int disableVmallocDebug()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getKmallocOrigin()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readRealTime()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readLimitTable()>
<vendor.oplus.hardware.performance.IPerformance: void setFgUids(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int hybridswap_zram_para_write(int,java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getfsyncwait()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readVersion()>
<vendor.oplus.hardware.performance.IPerformance: void writeClmHighLoadGrp(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readSgeInfo()>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcReqHal getHIIowaitHung()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readDBacktrace()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readRunningTime()>
<vendor.oplus.hardware.performance.IPerformance: int writeStorageFeature(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readClmHighLoadAll()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readNormalizeRealTime()>
<vendor.oplus.hardware.performance.IPerformance: int writeMonitorStatus(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int enableVmallocDebug()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getMemMonitor()>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcReqHal getHIIowait()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readVaFeature()>
<vendor.oplus.hardware.performance.IPerformance: void setImFlag(java.lang.String,java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int hybridswap_memcg_para_write(int,java.lang.String,java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int disableTaskCpustats()>
<vendor.oplus.hardware.performance.IPerformance: int writeUxState(java.lang.String,java.lang.String,java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: void clearTaskTrackGroup(int)>
<vendor.oplus.hardware.performance.IPerformance: int enableMultiThreadOptimize()>
<vendor.oplus.hardware.performance.IPerformance: int setTpdSerialParams(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int delAcmDirName(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int getAcmOpstat()>
<vendor.oplus.hardware.performance.IPerformance: void writeSchedInfoThreshold(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int writeTmemoryFlushIdle(int)>
<vendor.oplus.hardware.performance.IPerformance: void setClmMuxSwitch(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcReqHal getHIIonWait()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readTaskSchedInfo()>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcReqHal getHIAllocWait()>
<vendor.oplus.hardware.performance.IPerformance: int addAcmNomediaDirName(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcReqHal getHIEmcdrvIowait()>
<vendor.oplus.hardware.performance.IPerformance: int setFreqGoverner(java.lang.String,int[])>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readSchedInfoThreshold()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readTidsSet()>
<vendor.oplus.hardware.performance.IPerformance: int writeTmemoryMemory(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int writeKmallocDebugCreateWithType(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcReqHal getHIUfsFeature()>
<vendor.oplus.hardware.performance.IPerformance: int getOswapVersion()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readJankCpuInfoSig()>
<vendor.oplus.hardware.performance.IPerformance: int setDamonReclaimMonitoring(int,int)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getDevinfoUfsInfo()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getDevinfoUfsVersionInfo()>
<vendor.oplus.hardware.performance.IPerformance: int setProcessReclaim(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcReqHal getHIDState()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readIomonitorInfo(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcMemStatRet readMemoryByUids(int[],int)>
<vendor.oplus.hardware.performance.IPerformance: int enableKmallocDebug()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getUfsSignalRecordUpload()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readTargetProcess(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: void writeFgFreqsThreshold(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readJankCpuLoad()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readClmEnable()>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcMemStatRet readMemoryByPids(int[],int)>
<vendor.oplus.hardware.performance.IPerformance: int disableProcessReclaim()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getExt4FragScore(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int setAcmOpstat(int)>
<vendor.oplus.hardware.performance.IPerformance: int disableTaskPlacementDecision()>
<vendor.oplus.hardware.performance.IPerformance: int disableKmallocDebug()>
<vendor.oplus.hardware.performance.IPerformance: int delAcmPkgName(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getschedlatency()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readJankVersion()>
<vendor.oplus.hardware.performance.IPerformance: long getAcmPkgFlag(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readSgeFreqInfo()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getHICpuLoading()>
<vendor.oplus.hardware.performance.IPerformance: void writeClmLowLoadGrp(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: int writeTmemoryCapacity(int)>
<vendor.oplus.hardware.performance.IPerformance: int enableDamonReclaim()>
<vendor.oplus.hardware.performance.IPerformance: int delAcmNomediaDirName(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getKmallocUsed()>
<vendor.oplus.hardware.performance.IPerformance: boolean isJankTaskTrackEnable()>
<vendor.oplus.hardware.performance.IPerformance: int setDamonReclaimColdTime(int)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getInterfaceHash()>
<vendor.oplus.hardware.performance.IPerformance: int writeNandswapProc(java.lang.String,java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readJankCpuLoad32()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readTmemorySysdirtypages()>
<vendor.oplus.hardware.performance.IPerformance: int enableTaskPlacementDecision()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readJankTaskTrackByPid(int)>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String readCallStack()>
<vendor.oplus.hardware.performance.IPerformance: int setDamonReclaimQuota(int,int,int)>
<vendor.oplus.hardware.performance.IPerformance: int writeTmemorySwitch(int)>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcReqHal getHIFsyncWait()>
<vendor.oplus.hardware.performance.IPerformance: void writeClmHighLoadAll(java.lang.String)>
<vendor.oplus.hardware.performance.IPerformance: vendor.oplus.hardware.performance.ProcReqHal getHIKswapdLoading()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getVmallocDebug()>
<vendor.oplus.hardware.performance.IPerformance: java.lang.String getVmallocUsed()>
<com.oplus.multisearch.IOplusMultiSearchListener: void onBackPressedOnTaskRoot(android.app.ActivityManager$RunningTaskInfo)>
<com.oplus.multisearch.IOplusMultiSearchListener: void onTaskInfoChanged(android.app.ActivityManager$RunningTaskInfo)>
<com.oplus.multisearch.IOplusMultiSearchListener: void onTaskAppeared(android.app.ActivityManager$RunningTaskInfo,android.view.SurfaceControl)>
<com.oplus.multisearch.IOplusMultiSearchListener: void onTaskVanished(android.app.ActivityManager$RunningTaskInfo)>
<com.oplus.vrr.IOPlusRefreshRate: void notifyLauncherEvent(int)>
<com.oplus.vrr.IOPlusRefreshRate: boolean isWhiteListGame(java.lang.String)>
<com.oplus.vrr.IOPlusRefreshRate: boolean setVsyncConfig(int,float,float,java.lang.String)>
<com.oplus.vrr.IOPlusRefreshRate: void updateAccelerationPkgName(java.lang.String,int,int)>
<com.oplus.vrr.IOPlusRefreshRate: int getModeType(int)>
<com.oplus.vrr.IOPlusRefreshRate: void unRegisterOplusPixelWorksCallback(com.oplus.vrr.IOPlusPixelWorksCallback)>
<com.oplus.vrr.IOPlusRefreshRate: float getPreferredFrameRate(java.lang.String,java.lang.String)>
<com.oplus.vrr.IOPlusRefreshRate: boolean hasFlickerRisk()>
<com.oplus.vrr.IOPlusRefreshRate: void updateDisplayModes(long)>
<com.oplus.vrr.IOPlusRefreshRate: boolean setFrameRate(float,java.lang.String,java.lang.String,int)>
<com.oplus.vrr.IOPlusRefreshRate: int findDisplayModeIdByPolicy(int,int,int)>
<com.oplus.vrr.IOPlusRefreshRate: int getRefreshRatePolicy(float)>
<com.oplus.vrr.IOPlusRefreshRate: void setTgpaGameData(android.os.Bundle)>
<com.oplus.vrr.IOPlusRefreshRate: boolean setFrameRateTargetControl(float,java.lang.String,boolean,java.lang.String)>
<com.oplus.vrr.IOPlusRefreshRate: void notifyBrightnessChange(int,float)>
<com.oplus.vrr.IOPlusRefreshRate: void screenStateChange(int,int)>
<com.oplus.vrr.IOPlusRefreshRate: void setFrameRateTargetControlAsynchronous(float,java.lang.String,boolean,java.lang.String)>
<com.oplus.vrr.IOPlusRefreshRate: boolean setOsyncTargetFps(int)>
<com.oplus.vrr.IOPlusRefreshRate: int getFRTCInfo(java.lang.String)>
<com.oplus.vrr.IOPlusRefreshRate: void setAppFrameRate(int,java.lang.String,boolean,java.lang.String)>
<com.oplus.vrr.IOPlusRefreshRate: int setSrState(java.lang.String,int)>
<com.oplus.vrr.IOPlusRefreshRate: boolean setDisplayFrameRateControl(float,java.lang.String,int,int)>
<com.oplus.vrr.IOPlusRefreshRate: void notifyDisableAdfrOtiPwStatus(int)>
<com.oplus.vrr.IOPlusRefreshRate: int getIrisCapability(java.lang.String)>
<com.oplus.vrr.IOPlusRefreshRate: int getSrState()>
<com.oplus.vrr.IOPlusRefreshRate: void notifyNitsChange(float)>
<com.oplus.vrr.IOPlusRefreshRate: void notifyPWMode(boolean)>
<com.oplus.vrr.IOPlusRefreshRate: void setExternalRefreshRateStatus(int)>
<com.oplus.vrr.IOPlusRefreshRate: void setLowFreqVideo(boolean)>
<com.oplus.vrr.IOPlusRefreshRate: int setIrisFunctionState(java.lang.String,int,int,int)>
<com.oplus.vrr.IOPlusRefreshRate: boolean isGameAccelerationScene()>
<com.oplus.vrr.IOPlusRefreshRate: void screenStateChangeWarning(int,int)>
<com.oplus.vrr.IOPlusRefreshRate: void registerOplusPixelWorksCallback(com.oplus.vrr.IOPlusPixelWorksCallback)>
<com.oplus.vrr.IOPlusRefreshRate: boolean setSystemFrameRateControl(float,java.lang.String)>
<com.oplus.vrr.IOPlusRefreshRate: java.util.List getList(int)>
<com.oplus.vrr.IOPlusRefreshRate: void setRefreshRatePolicy(int,float,int,boolean)>
<com.oplus.vrr.IOPlusRefreshRate: void setDynamicAppVsyncEnable(boolean)>

<android.content.IOplusOverlayManager: void setLanguageEnable(java.lang.String,int)>

<com.oplus.os.IOplusPreOdex: void dexoptNextPackage(java.lang.String)>
<com.oplus.os.IOplusPreOdex: void prepare(java.lang.String)>
<com.oplus.os.IOplusPreOdex: float getProgress(java.lang.String)>
<com.oplus.os.IOplusPreOdex: boolean isDone(java.lang.String)>
<com.oplus.os.IOplusPreOdex: void getOdrefreshStatus()>
<com.oplus.os.IOplusPreOdex: void interruptOtaDexopt()>
<com.oplus.os.IOplusPreOdex: void cleanup(java.lang.String)>
<com.oplus.os.IOplusPreOdex: java.lang.String nextDexoptCommand(java.lang.String)>
<com.oplus.os.IOplusPreOdex: java.lang.String dump(java.lang.String)>
<com.oplus.app.IProcessTerminateObserver: void onProcessTerminate(java.lang.String)>

<android.view.inputmethod.IOplusInputMethodManager: boolean clearDefaultInputMethodByCustomize()>
<android.view.inputmethod.IOplusInputMethodManager: void unregisterCursorAnchorInfoListener(android.os.ResultReceiver)>
<android.view.inputmethod.IOplusInputMethodManager: void setAlwaysLogOff()>
<android.view.inputmethod.IOplusInputMethodManager: int getInputMethodWindowVisibleHeight(int)>
<android.view.inputmethod.IOplusInputMethodManager: void invalidateInputToSynergy(android.view.inputmethod.EditorInfo,com.android.internal.inputmethod.IRemoteInputConnection,int)>
<android.view.inputmethod.IOplusInputMethodManager: void updateTouchDeviceId(int)>
<android.view.inputmethod.IOplusInputMethodManager: java.lang.String getDefaultInputMethodByCustomize()>
<android.view.inputmethod.IOplusInputMethodManager: boolean setDefaultInputMethodByCustomize(java.lang.String)>
<android.view.inputmethod.IOplusInputMethodManager: void commitTextByOtherSide()>
<android.view.inputmethod.IOplusInputMethodManager: void registerInputMethodSynergyService(android.content.ComponentName,boolean)>
<android.view.inputmethod.IOplusInputMethodManager: void hideCurrentInputMethod()>
<android.view.inputmethod.IOplusInputMethodManager: void updateCursorAnchorInfoToSynergy(android.view.inputmethod.CursorAnchorInfo)>
<android.view.inputmethod.IOplusInputMethodManager: void registerCursorAnchorInfoListener(android.os.ResultReceiver)>
<android.view.inputmethod.IOplusInputMethodManager: void setAlwaysLogOn(long,java.lang.String)>
<android.view.inputmethod.IOplusInputMethodManager: void hideSoftInput()>
<com.oplus.vrr.IOPlusPixelWorksCallback: void onPixelWorksStateChanged(int,int[])>

<android.window.IOplusTaskOrganizer: void updateStartingWindowExtendedInfo(android.window.OplusStartingWindowExtendedInfo,android.os.IBinder)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void showSplitToast(int,android.os.Bundle)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void enterSplitScreenNormal()>
<com.oplus.splitscreen.IOplusStackDividerConnection: void showEnterMinimizedToast()>
<com.oplus.splitscreen.IOplusStackDividerConnection: void dismissSplitScreenMode(int)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void exitSplitScreen(int,int)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void toggleSplitScreen(int)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void startPairIntent(android.content.Intent,android.content.Intent,int,int,android.os.Bundle)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void startIntent(android.app.PendingIntent,android.content.Intent,int,android.os.Bundle)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void startTask(int,int,android.os.Bundle)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void breakPairedTaskInRecent(int,int)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void moveTaskToSplitStage(int,boolean)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void matainSplitState(boolean)>
<com.oplus.splitscreen.IOplusStackDividerConnection: boolean needInterceptStartForSplitScreen(java.lang.String,java.lang.String,boolean)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void setDividerShow(boolean)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void showNotSupportSplitWarn(java.lang.CharSequence)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void moveTaskAndIntentActivityToSplitScreen(android.app.ActivityManager$RunningTaskInfo,android.hardware.HardwareBuffer,int,boolean,int,android.app.PendingIntent,android.content.Intent,android.os.Bundle,int)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void moveTasksToSplitStages(int,int,int,int)>
<com.oplus.splitscreen.IOplusStackDividerConnection: void moveToSplitScreen(int,android.app.PendingIntent,android.content.Intent,android.os.Bundle,int)>
<com.oplus.preloadsource.IOplusChannelService: void handleChannelEvent(java.util.List)>

<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_shutdown_detect()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String read_theia_node(int)>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_mt_gpio()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: int get_operator_name()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: int get_rf_type()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: int[] readAgingData(int)>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: boolean set_phoenix(java.lang.String)>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: boolean set_shutdown_detect(java.lang.String)>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_opboot()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: boolean saveAgingData(int,int[],int)>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: boolean write_theia_node(int,java.lang.String)>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_pmic_info()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_poff_reason()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: boolean is_ufs_devices()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_opluspon_reason(int)>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String miscModuleBlocklist()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_pon_reason()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String miscReadLinkedModules()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: int get_eng_version()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_opluspoff_reason(int)>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String getInterfaceHash()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_hungtask()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: int get_sau()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_oplusocp_status(int)>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: int get_pcb_version()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: boolean set_opboot(java.lang.String)>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: int get_project()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_ocp()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: int get_ftmmode()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_force_reboot()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_serial_ID()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: int getInterfaceVersion()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String get_phoenix()>
<vendor.oplus.hardware.stability.oplus_project.IOplusProject: java.lang.String miscModule2Load()>
<com.oplus.bracket.IOplusBracketWindowObserver: void onSurfaceViewChange(com.oplus.bracket.IOplusBracketModeChangedListener,int,android.graphics.Rect)>
<com.oplus.bracket.IOplusBracketWindowObserver: void onSurfaceViewShow(com.oplus.bracket.IOplusBracketModeChangedListener,int)>

<com.oplus.bt.IBluetoothLeCallControlCallback: void onPlaceCall(int,android.os.ParcelUuid,java.lang.String)>
<com.oplus.bt.IBluetoothLeCallControlCallback: void onJoinCalls(int,java.util.List)>
<com.oplus.bt.IBluetoothLeCallControlCallback: void onAcceptCall(int,android.os.ParcelUuid)>
<com.oplus.bt.IBluetoothLeCallControlCallback: void onBearerRegistered(int)>
<com.oplus.bt.IBluetoothLeCallControlCallback: void onUnholdCall(int,android.os.ParcelUuid)>
<com.oplus.bt.IBluetoothLeCallControlCallback: void onTerminateCall(int,android.os.ParcelUuid)>
<com.oplus.bt.IBluetoothLeCallControlCallback: void onHoldCall(int,android.os.ParcelUuid)>
<com.oplus.bt.IBluetoothLeCallControl: void currentCallsList(int,java.util.List,android.content.AttributionSource)>
<com.oplus.bt.IBluetoothLeCallControl: void isAudioOn(android.content.AttributionSource,com.android.modules.utils.SynchronousResultReceiver)>
<com.oplus.bt.IBluetoothLeCallControl: void stopIsoUsingVirtualVoiceCall(int,android.content.AttributionSource,com.android.modules.utils.SynchronousResultReceiver)>
<com.oplus.bt.IBluetoothLeCallControl: void stopVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.modules.utils.SynchronousResultReceiver)>
<com.oplus.bt.IBluetoothLeCallControl: void phoneStateChanged(int,int,int,java.lang.String,int,java.lang.String,android.content.AttributionSource)>
<com.oplus.bt.IBluetoothLeCallControl: void callRemoved(int,android.os.ParcelUuid,int,android.content.AttributionSource)>
<com.oplus.bt.IBluetoothLeCallControl: void disconnectCgAudio(android.content.AttributionSource,com.android.modules.utils.SynchronousResultReceiver)>
<com.oplus.bt.IBluetoothLeCallControl: void getAudioState(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.modules.utils.SynchronousResultReceiver)>
<com.oplus.bt.IBluetoothLeCallControl: void networkStateChanged(int,java.lang.String,int,android.content.AttributionSource)>
<com.oplus.bt.IBluetoothLeCallControl: void startVoiceRecognition(android.bluetooth.BluetoothDevice,android.content.AttributionSource,com.android.modules.utils.SynchronousResultReceiver)>
<com.oplus.bt.IBluetoothLeCallControl: void requestResult(int,int,int,android.content.AttributionSource)>
<com.oplus.bt.IBluetoothLeCallControl: void disconnectAudio(android.content.AttributionSource,com.android.modules.utils.SynchronousResultReceiver)>
<com.oplus.bt.IBluetoothLeCallControl: void callStateChanged(int,android.os.ParcelUuid,int,android.content.AttributionSource)>
<com.oplus.bt.IBluetoothLeCallControl: void connectAudio(android.content.AttributionSource,com.android.modules.utils.SynchronousResultReceiver)>
<com.oplus.bt.IBluetoothLeCallControl: void unregisterBearer(java.lang.String,android.content.AttributionSource)>
<com.oplus.bt.IBluetoothLeCallControl: void registerBearer(java.lang.String,com.oplus.bt.IBluetoothLeCallControlCallback,java.lang.String,java.util.List,int,java.lang.String,int,android.content.AttributionSource)>
<com.oplus.bt.IBluetoothLeCallControl: void connectCgAudio(android.content.AttributionSource,com.android.modules.utils.SynchronousResultReceiver)>
<com.oplus.bt.IBluetoothLeCallControl: void callAdded(int,android.bluetooth.BluetoothLeCall,android.content.AttributionSource)>
<com.oplus.bt.IBluetoothLeCallControl: void isInbandRingingEnabled(android.content.AttributionSource,com.android.modules.utils.SynchronousResultReceiver)>
<com.oplus.bt.IBluetoothLeCallControl: void startIsoUsingVirtualVoiceCall(int,android.content.AttributionSource,com.android.modules.utils.SynchronousResultReceiver)>

<android.view.IOplusGestureAnimationController: void finishGestureAnimation(android.os.Bundle)>
<vendor.oplus.hardware.power.powermonitor.IPowerMonitor: java.lang.String getAtdEnable()>
<vendor.oplus.hardware.power.powermonitor.IPowerMonitor: int setAtdEnable(int)>
<vendor.oplus.hardware.power.powermonitor.IPowerMonitor: int setAtdLevel(int)>
<vendor.oplus.hardware.power.powermonitor.IPowerMonitor: int enableEdTask()>
<vendor.oplus.hardware.power.powermonitor.IPowerMonitor: int writeHoraeQmi(java.lang.String)>
<vendor.oplus.hardware.power.powermonitor.IPowerMonitor: java.lang.String readEdTaskEnabled()>
<vendor.oplus.hardware.power.powermonitor.IPowerMonitor: java.lang.String readAtdTask()>
<vendor.oplus.hardware.power.powermonitor.IPowerMonitor: java.lang.String getInterfaceHash()>
<vendor.oplus.hardware.power.powermonitor.IPowerMonitor: java.lang.String getAtdLevel()>
<vendor.oplus.hardware.power.powermonitor.IPowerMonitor: int getInterfaceVersion()>
<vendor.oplus.hardware.power.powermonitor.IPowerMonitor: int disableEdTask()>
<com.android.internal.telecom.ITelecomService: void addNewOutgoingCall(android.content.Intent)>
<com.android.internal.telecom.ITelecomService: void oplusCancelMissedCallsNotification(java.lang.String,android.os.Bundle)>


<android.os.IInstalld: void oplusCustomizeInterface(java.lang.String,android.os.PersistableBundle,android.os.ICustomizePmsCallback)>
<android.os.IInstalld: android.os.PersistableBundle oplusCommonInterface(java.lang.String,android.os.PersistableBundle)>

<com.oplus.verifycode.IOplusVerifyCodeListener: void onBindService(com.oplus.verifycode.IOplusVerifyCodeService)>
<com.oplus.verifycode.IOplusVerifyCodeListener: void onUnBindService(int)>
<com.oplus.verifycode.IOplusVerifyCodeListener: void notifyIMELayoutChanged(boolean,int,int)>
<com.oplus.verifycode.IOplusVerifyCodeListener: void notifyImeAttributeChanged(int,boolean)>
<android.hardware.display.IOplusDisplayManager: android.os.IBinder getPhysicalDisplayToken(long)>
<android.hardware.display.IOplusDisplayManager: android.os.Bundle getScreenProductionTime()>
<android.hardware.display.IOplusDisplayManager: android.os.Bundle getScreenMultiBitsSupport()>
<android.hardware.display.IOplusDisplayManager: boolean isSupportSinglePulseDimmingInEyeProtect()>
<android.hardware.display.IOplusDisplayManager: boolean isSupportSinglePulseDimming()>
<android.hardware.display.IOplusDisplayManager: void setSpecBrightness(int,java.lang.String,int)>
<android.hardware.display.IOplusDisplayManager: boolean isSupportUpgradeUIDevices()>
<android.hardware.display.IOplusDisplayManager: void setFakeLux(int,boolean,int,int)>

<android.view.IOplusGestureAnimationRunner: void onAnimationStart(android.view.IOplusGestureAnimationController,android.view.RemoteAnimationTarget[],android.view.SurfaceControl[])>
<android.view.IOplusGestureAnimationRunner: void onAnimationCanceled()>
